@model ManagerDashboardViewModel
@{
    ViewData["Title"] = "Manager Dashboard";
    Layout = "_Layout";
}

<style>
    .manager-container {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        min-height: 100vh;
        padding: 0;
        margin: 0;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .sidebar {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(10px);
        border-right: none;
        min-height: 100vh;
        padding: 0;
        position: fixed;
        width: 220px;
        z-index: 1000;
        box-shadow: 4px 0 20px rgba(0, 0, 0, 0.1);
        border-radius: 0 20px 20px 0;
    }

    .sidebar-header {
        padding: 20px 15px;
        text-align: center;
        border-bottom: 1px solid rgba(102, 126, 234, 0.1);
    }

        .sidebar-header h3 {
            color: #2d3748;
            font-weight: 700;
            margin: 0;
            font-size: 20px;
        }

        .sidebar-header p {
            color: #718096;
            margin: 5px 0 0 0;
            font-size: 12px;
        }

    .sidebar-item {
        padding: 12px 15px;
        cursor: pointer;
        transition: all 0.3s ease;
        font-weight: 500;
        color: #4a5568;
        border-left: 4px solid transparent;
        display: flex;
        align-items: center;
        gap: 10px;
        margin: 3px 10px;
        border-radius: 8px;
        font-size: 14px;
    }

        .sidebar-item:hover {
            background: rgba(102, 126, 234, 0.1);
            color: #667eea;
            transform: translateX(3px);
        }

        .sidebar-item.active {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border-left-color: #667eea;
            box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);
        }

    .main-content {
        margin-left: 220px;
        padding: 20px;
        max-width: 1400px;
    }

    .manager-header {
        text-align: center;
        color: white;
        font-size: 28px;
        font-weight: 700;
        margin-bottom: 30px;
        text-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

    .stats-card {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(10px);
        border-radius: 15px;
        padding: 20px;
        margin-bottom: 30px;
        box-shadow: 0 15px 30px rgba(0, 0, 0, 0.1);
        text-align: center;
    }

    .pending-count {
        font-size: 48px;
        font-weight: 700;
        color: #f59e0b;
        margin-bottom: 10px;
    }

    .pending-label {
        color: #4a5568;
        font-size: 18px;
        font-weight: 600;
    }

    .leaves-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(450px, 1fr));
        gap: 25px;
        margin-bottom: 30px;
    }

    .leave-request-card {
        background: white;
        border-radius: 16px;
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
        border: 1px solid #e2e8f0;
        overflow: hidden;
        transition: all 0.3s ease;
        position: relative;
    }

        .leave-request-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.15);
        }

    .card-header {
        background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
        padding: 20px 24px;
        border-bottom: 1px solid #e2e8f0;
    }

    .employee-info {
        display: flex;
        align-items: center;
        gap: 12px;
        margin-bottom: 12px;
    }

    .employee-avatar {
        width: 45px;
        height: 45px;
        border-radius: 50%;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-weight: 600;
        font-size: 18px;
    }

    .employee-details h4 {
        margin: 0;
        color: #2d3748;
        font-size: 18px;
        font-weight: 600;
    }

    .employee-details p {
        margin: 2px 0 0 0;
        color: #718096;
        font-size: 14px;
    }

    .leave-type-badge {
        position: absolute;
        top: 20px;
        right: 20px;
        padding: 6px 12px;
        border-radius: 20px;
        font-size: 12px;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .vacation-badge {
        background: #d1fae5;
        color: #065f46;
        border: 1px solid #10b981;
    }

    .sick-badge {
        background: #fef3c7;
        color: #92400e;
        border: 1px solid #fbbf24;
    }

    .emergency-badge {
        background: #fee2e2;
        color: #991b1b;
        border: 1px solid #ef4444;
    }

    .maternity-badge {
        background: #dbeafe;
        color: #1e40af;
        border: 1px solid #3b82f6;
    }

    .card-body {
        padding: 24px;
    }

    .date-section {
        background: #f8fafc;
        border-radius: 12px;
        padding: 16px;
        margin-bottom: 16px;
        border-left: 4px solid #667eea;
    }

    .date-info {
        display: flex;
        align-items: center;
        justify-content: space-between;
        flex-wrap: wrap;
        gap: 12px;
    }

    .date-range {
        display: flex;
        align-items: center;
        gap: 8px;
        font-weight: 600;
        color: #2d3748;
        font-size: 16px;
    }

    .duration-badge {
        background: #667eea;
        color: white;
        padding: 6px 12px;
        border-radius: 16px;
        font-size: 12px;
        font-weight: 600;
    }

    .comment-section {
        background: #f7fafc;
        border-radius: 10px;
        padding: 16px;
        margin-bottom: 20px;
        border-left: 3px solid #667eea;
    }

    .comment-text {
        color: #4a5568;
        font-style: italic;
        margin: 0;
        line-height: 1.6;
    }

    .action-buttons {
        display: flex;
        gap: 12px;
        margin-top: 20px;
    }

    .btn-approve {
        background: linear-gradient(135deg, #10b981 0%, #059669 100%);
        color: white;
        border: none;
        padding: 12px 24px;
        border-radius: 10px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        flex: 1;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 8px;
    }

        .btn-approve:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 20px rgba(16, 185, 129, 0.4);
        }

    .btn-reject {
        background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);
        color: white;
        border: none;
        padding: 12px 24px;
        border-radius: 10px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        flex: 1;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 8px;
    }

        .btn-reject:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 20px rgba(239, 68, 68, 0.4);
        }

    .decision-modal {
        display: none;
        position: fixed;
        z-index: 1000;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        backdrop-filter: blur(5px);
    }

    .modal-content {
        background-color: white;
        margin: 10% auto;
        padding: 30px;
        border-radius: 16px;
        width: 90%;
        max-width: 500px;
        box-shadow: 0 25px 50px rgba(0, 0, 0, 0.25);
        animation: modalSlideIn 0.3s ease-out;
    }

    @@keyframes modalSlideIn {
        from

    {
        opacity: 0;
        transform: translateY(-50px);
    }

    to {
        opacity: 1;
        transform: translateY(0);
    }

    }

    .modal-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
        padding-bottom: 15px;
        border-bottom: 1px solid #e2e8f0;
    }

    .modal-title {
        font-size: 20px;
        font-weight: 600;
        color: #2d3748;
        margin: 0;
    }

    .close-btn {
        background: none;
        border: none;
        font-size: 24px;
        cursor: pointer;
        color: #718096;
        padding: 0;
        width: 30px;
        height: 30px;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 50%;
        transition: all 0.2s ease;
    }

        .close-btn:hover {
            background: #f7fafc;
            color: #2d3748;
        }

    .form-group {
        margin-bottom: 20px;
    }

    .form-label {
        display: block;
        margin-bottom: 8px;
        font-weight: 600;
        color: #4a5568;
    }

    .form-control {
        width: 100%;
        padding: 12px;
        border: 2px solid #e2e8f0;
        border-radius: 8px;
        font-size: 14px;
        transition: all 0.3s ease;
        resize: vertical;
        min-height: 100px;
    }

        .form-control:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

    .modal-actions {
        display: flex;
        gap: 12px;
        margin-top: 25px;
    }

    .btn-submit {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        border: none;
        padding: 12px 24px;
        border-radius: 8px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        flex: 1;
    }

        .btn-submit:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 20px rgba(102, 126, 234, 0.4);
        }

    .btn-cancel {
        background: #f7fafc;
        color: #4a5568;
        border: 1px solid #e2e8f0;
        padding: 12px 24px;
        border-radius: 8px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        flex: 1;
    }

        .btn-cancel:hover {
            background: #edf2f7;
            border-color: #cbd5e0;
        }

    .alert-custom {
        padding: 15px 20px;
        margin-bottom: 25px;
        border-radius: 10px;
        border: none;
        font-weight: 500;
        display: flex;
        align-items: center;
        gap: 12px;
    }

    .alert-success {
        background: linear-gradient(135deg, #d1fae5 0%, #a7f3d0 100%);
        color: #065f46;
        box-shadow: 0 4px 12px rgba(16, 185, 129, 0.2);
    }

    .alert-error {
        background: linear-gradient(135deg, #fee2e2 0%, #fecaca 100%);
        color: #991b1b;
        box-shadow: 0 4px 12px rgba(239, 68, 68, 0.2);
    }

    .empty-state {
        text-align: center;
        padding: 60px 20px;
        background: white;
        border-radius: 16px;
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
    }

    .empty-icon {
        font-size: 64px;
        color: #cbd5e0;
        margin-bottom: 20px;
    }

    .empty-title {
        font-size: 24px;
        font-weight: 600;
        color: #4a5568;
        margin-bottom: 8px;
    }

    .empty-description {
        color: #718096;
        font-size: 16px;
    }

    @@media (max-width: 768px) {
        .leaves-grid

    {
        grid-template-columns: 1fr;
    }

    .main-content {
        margin-left: 0;
        padding: 15px;
    }

    .sidebar {
        display: none;
    }

    .action-buttons {
        flex-direction: column;
    }

    .modal-content {
        margin: 5% auto;
        width: 95%;
    }

    }
</style>

<div class="manager-container">
    <!-- Sidebar -->
    <div class="sidebar">
        <div class="sidebar-header">
            <h3>SmartLeave</h3>
            <p>Manager Portal</p>
        </div>

        <div class="sidebar-item active">
            <i class="fas fa-clipboard-check"></i>
            <span>Leaves to Approve</span>
        </div>

    </div>

    <!-- Main Content -->
    <div class="main-content">
        <div class="manager-header">Welcome, @Model.ManagerName! 👨‍💼</div>

        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert-custom alert-success">
                <i class="fas fa-check-circle"></i>
                @TempData["SuccessMessage"]
            </div>
        }

        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert-custom alert-error">
                <i class="fas fa-exclamation-triangle"></i>
                @TempData["ErrorMessage"]
            </div>
        }

        <!-- Stats Card -->
        <div class="stats-card">
            <div class="pending-count">@Model.TotalPendingCount</div>
            <div class="pending-label">Pending Leave Requests</div>
        </div>

        @if (Model.PendingLeaves.Any())
        {
            <div class="leaves-grid">
                @foreach (var leave in Model.PendingLeaves)
                {
                    <div class="leave-request-card">
                        <div class="card-header">

                            <div class="employee-info">
                                <div class="employee-avatar">
                                    @{
                                        var initials = "";
                                        if (!string.IsNullOrEmpty(leave.AppliedBy))
                                        {
                                            var nameParts = leave.AppliedBy.Split(' ', StringSplitOptions.RemoveEmptyEntries);
                                            if (nameParts.Length >= 2)
                                            {
                                                initials = nameParts[0].Substring(0, 1).ToUpper() + nameParts[1].Substring(0, 1).ToUpper();
                                            }
                                            else if (nameParts.Length == 1)
                                            {
                                                initials = nameParts[0].Substring(0, 1).ToUpper();
                                            }
                                            else
                                            {
                                                initials = "?";
                                            }
                                        }
                                        else
                                        {
                                            initials = "?";
                                        }
                                    }
                                    @initials
                                </div>
                                <div class="employee-details">
                                    <h4>@leave.AppliedBy</h4>
                                    <p>Applied on @leave.AppliedOn.ToString("MMM dd, yyyy")</p>
                                </div>
                            </div>

                            @{
                                var badgeClass = leave.LeaveType.ToLower() switch
                                {
                                    "vacation" or "annual" => "vacation-badge",
                                    "sick" or "medical" => "sick-badge",
                                    "emergency" => "emergency-badge",
                                    "maternity" => "maternity-badge",
                                    _ => "vacation-badge"
                                };
                            }
                            <div class="leave-type-badge @badgeClass">
                                @leave.LeaveType
                            </div>
                        </div>

                        <div class="card-body">
                            <div class="date-section">
                                <div class="date-info">
                                    <div class="date-range">
                                        <i class="fas fa-calendar-alt"></i>
                                        @leave.StartDate.ToString("MMM dd") - @leave.EndDate.ToString("MMM dd, yyyy")
                                    </div>
                                    <div class="duration-badge">
                                        @leave.TotalDays day@(leave.TotalDays != 1 ? "s" : "")
                                    </div>
                                </div>
                                @* ✔ Add this block to show attachment if available *@
                                @if (!string.IsNullOrEmpty(leave.AttachmentUrl))
                                {
                                    <div style="margin-bottom: 10px;">
                                        <strong>Attachment:</strong>
                                        <a href="@leave.AttachmentUrl" target="_blank">View File</a>
                                    </div>
                                }

                                @* Optional: Add comment section or actions here *@
                            </div>

                            @if (!string.IsNullOrEmpty(leave.Comment))
                            {
                                <div class="comment-section">
                                    <div style="display: flex; align-items: flex-start; gap: 8px;">
                                        <i class="fas fa-quote-left" style="color: #667eea; margin-top: 2px;"></i>
                                        <p class="comment-text">@leave.Comment</p>
                                    </div>
                                </div>
                            }


                            <div class="action-buttons">
                                <button class="btn-approve" onclick="openDecisionModal(@leave.Id, '@(leave.AppliedBy?.Replace("'", "\\'") ?? "Unknown Employee")', true)">
                                    <i class="fas fa-check"></i>
                                    Approve
                                </button>
                                <button class="btn-reject" onclick="openDecisionModal(@leave.Id, '@(leave.AppliedBy?.Replace("'", "\\'") ?? "Unknown Employee")', false)">
                                    <i class="fas fa-times"></i>
                                    Reject
                                </button>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="empty-state">
                <div class="empty-icon">
                    <i class="fas fa-clipboard-check"></i>
                </div>
                <h2 class="empty-title">No Pending Leave Requests</h2>
                <p class="empty-description">All leave requests have been processed.</p>
            </div>
        }
    </div>
</div>

<!-- Decision Modal -->
<div id="decisionModal" class="decision-modal">
    <div class="modal-content">
        <div class="modal-header">
            <h3 class="modal-title" id="modalTitle">Approve Leave Request</h3>
            <button class="close-btn" onclick="closeDecisionModal()">&times;</button>
        </div>

        <form id="decisionForm" method="post" action="@Url.Action("ProcessLeaveDecision")">
            <input type="hidden" id="leaveId" name="LeaveId" />
            <input type="hidden" id="isApproved" name="IsApproved" />

            <div class="form-group">
                <label class="form-label" id="noteLabel">Approval Note:</label>
                <textarea id="note" name="Note" class="form-control" placeholder="Add a note for the employee..." required></textarea>
            </div>

            <div class="modal-actions">
                <button type="submit" class="btn-submit" id="submitBtn">
                    <i class="fas fa-check"></i>
                    Approve Request
                </button>
                <button type="button" class="btn-cancel" onclick="closeDecisionModal()">Cancel</button>
            </div>
        </form>
    </div>
</div>

<script>
        function openDecisionModal(leaveId, employeeName, isApproved) {
        document.getElementById('leaveId').value = leaveId;
        document.getElementById('isApproved').value = isApproved;

        const modal = document.getElementById('decisionModal');
        const title = document.getElementById('modalTitle');
        const noteLabel = document.getElementById('noteLabel');
        const submitBtn = document.getElementById('submitBtn');
        const noteField = document.getElementById('note');

        // Handle empty employee name
        const displayName = employeeName || 'Unknown Employee';

        if (isApproved) {
            title.textContent = `Approve Leave Request - ${displayName}`;
            noteLabel.textContent = 'Approval Note:';
            submitBtn.innerHTML = '<i class="fas fa-check"></i> Approve Request';
            submitBtn.style.background = 'linear-gradient(135deg, #10b981 0%, #059669 100%)';
            noteField.placeholder = 'Add an approval note for the employee...';
        } else {
            title.textContent = `Reject Leave Request - ${displayName}`;
            noteLabel.textContent = 'Rejection Reason:';
            submitBtn.innerHTML = '<i class="fas fa-times"></i> Reject Request';
            submitBtn.style.background = 'linear-gradient(135deg, #ef4444 0%, #dc2626 100%)';
            noteField.placeholder = 'Please provide a reason for rejection...';
        }

        noteField.value = '';
        modal.style.display = 'block';
        noteField.focus();
    }

        function closeDecisionModal() {
            document.getElementById('decisionModal').style.display = 'none';
        }

        // Close modal when clicking outside
        window.onclick = function(event) {
            const modal = document.getElementById('decisionModal');
            if (event.target === modal) {
                closeDecisionModal();
            }
        }

        // Close modal with Escape key
        document.addEventListener('keydown', function(event) {
            if (event.key === 'Escape') {
                closeDecisionModal();
            }
        });
</script>
