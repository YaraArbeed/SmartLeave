@model EmployeeDashboardViewModel
@{
    ViewData["Title"] = "My Leave Requests";
    Layout = "_Layout";
}

@section Styles {
    <style>
        .leaves-container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }

        .breadcrumb-nav {
            display: flex;
            align-items: center;
            gap: 8px;
            margin-bottom: 20px;
            font-size: 14px;
            color: #718096;
        }

        .breadcrumb-link {
            color: #667eea;
            text-decoration: none;
            font-weight: 500;
            transition: color 0.2s ease;
        }

        .breadcrumb-link:hover {
            color: #5a67d8;
            text-decoration: none;
        }

        .breadcrumb-separator {
            color: #cbd5e0;
        }

        .breadcrumb-current {
            color: #4a5568;
            font-weight: 600;
        }

        .page-header {
            display: flex;
            align-items: center;
            justify-content: space-between;
            margin-bottom: 30px;
            padding-bottom: 20px;
            border-bottom: 2px solid #e2e8f0;
        }

        .page-title-section {
            display: flex;
            align-items: center;
            gap: 16px;
        }

        .back-button {
            background: #f7fafc;
            border: 1px solid #e2e8f0;
            color: #4a5568;
            padding: 10px 12px;
            border-radius: 10px;
            text-decoration: none;
            font-weight: 500;
            display: flex;
            align-items: center;
            gap: 8px;
            transition: all 0.2s ease;
            font-size: 14px;
        }

        .back-button:hover {
            background: #edf2f7;
            border-color: #cbd5e0;
            color: #2d3748;
            text-decoration: none;
            transform: translateX(-2px);
        }

        .page-title {
            font-size: 28px;
            font-weight: 700;
            color: #2d3748;
            display: flex;
            align-items: center;
            gap: 12px;
            margin: 0;
        }

        .header-actions {
            display: flex;
            gap: 12px;
        }

        .btn-secondary {
            background: #f7fafc;
            border: 1px solid #e2e8f0;
            color: #4a5568;
            padding: 10px 16px;
            border-radius: 10px;
            text-decoration: none;
            font-weight: 500;
            display: flex;
            align-items: center;
            gap: 8px;
            transition: all 0.2s ease;
            font-size: 14px;
        }

        .btn-secondary:hover {
            background: #edf2f7;
            border-color: #cbd5e0;
            color: #2d3748;
            text-decoration: none;
        }

        .leaves-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .leave-card {
            background: white;
            border-radius: 16px;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
            border: 1px solid #e2e8f0;
            overflow: hidden;
            transition: all 0.3s ease;
            position: relative;
        }

        .leave-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 25px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
        }

        .card-header {
            padding: 20px 24px 16px;
            border-bottom: 1px solid #f1f5f9;
            position: relative;
        }

        .status-badge {
            position: absolute;
            top: 16px;
            right: 20px;
            padding: 6px 12px;
            border-radius: 20px;
            font-size: 12px;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .status-pending {
            background: #fef3c7;
            color: #92400e;
            border: 1px solid #fbbf24;
        }

        .status-approved {
            background: #d1fae5;
            color: #065f46;
            border: 1px solid #10b981;
        }

        .status-rejected {
            background: #fee2e2;
            color: #991b1b;
            border: 1px solid #ef4444;
        }

        .leave-type-section {
            display: flex;
            align-items: center;
            gap: 12px;
            margin-bottom: 12px;
        }

        .leave-type-icon {
            width: 40px;
            height: 40px;
            border-radius: 10px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 18px;
        }

        .vacation-icon {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
        }

        .sick-icon {
            background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
            color: white;
        }

        .personal-icon {
            background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
            color: white;
        }

        .emergency-icon {
            background: linear-gradient(135deg, #fa709a 0%, #fee140 100%);
            color: white;
        }

        .leave-type-info h3 {
            font-size: 18px;
            font-weight: 600;
            color: #2d3748;
            margin: 0;
        }

        .leave-type-info p {
            font-size: 14px;
            color: #718096;
            margin: 2px 0 0 0;
        }

        .card-body {
            padding: 0 24px 20px;
        }

        .date-section {
            background: #f8fafc;
            border-radius: 12px;
            padding: 16px;
            margin-bottom: 16px;
            border-left: 4px solid #667eea;
        }

        .date-info {
            display: flex;
            align-items: center;
            justify-content: space-between;
            flex-wrap: wrap;
            gap: 12px;
        }

        .date-range {
            display: flex;
            align-items: center;
            gap: 8px;
            font-weight: 600;
            color: #2d3748;
        }

        .duration-badge {
            background: #667eea;
            color: white;
            padding: 4px 12px;
            border-radius: 16px;
            font-size: 12px;
            font-weight: 600;
        }

        .comment-section {
            background: #f7fafc;
            border-radius: 10px;
            padding: 14px;
            margin-bottom: 16px;
            border-left: 3px solid #667eea;
        }

        .comment-text {
            color: #4a5568;
            font-style: italic;
            margin: 0;
            line-height: 1.5;
        }

        .status-info {
            display: flex;
            align-items: center;
            gap: 8px;
            padding: 12px 16px;
            border-radius: 10px;
            font-size: 14px;
            font-weight: 500;
        }

        .status-info.pending {
            background: #fef3c7;
            color: #92400e;
        }

        .status-info.approved {
            background: #d1fae5;
            color: #065f46;
        }

        .status-info.rejected {
            background: #fee2e2;
            color: #991b1b;
        }

        .empty-state {
            text-align: center;
            padding: 60px 20px;
            background: white;
            border-radius: 16px;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
        }

        .empty-icon {
            font-size: 64px;
            color: #cbd5e0;
            margin-bottom: 20px;
        }

        .empty-title {
            font-size: 24px;
            font-weight: 600;
            color: #4a5568;
            margin-bottom: 8px;
        }

        .empty-description {
            color: #718096;
            margin-bottom: 24px;
            font-size: 16px;
        }

        .btn-primary {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 12px 24px;
            border-radius: 10px;
            text-decoration: none;
            font-weight: 600;
            display: inline-flex;
            align-items: center;
            gap: 8px;
            transition: all 0.3s ease;
        }

        .btn-primary:hover {
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(102, 126, 234, 0.4);
            color: white;
            text-decoration: none;
        }

        .stats-bar {
            display: flex;
            gap: 16px;
            margin-bottom: 24px;
            flex-wrap: wrap;
        }

        .stat-item {
            background: white;
            padding: 16px 20px;
            border-radius: 12px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            text-align: center;
            min-width: 120px;
        }

        .stat-number {
            font-size: 24px;
            font-weight: 700;
            margin-bottom: 4px;
        }

        .stat-label {
            font-size: 12px;
            color: #718096;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .stat-pending .stat-number { color: #d69e2e; }
        .stat-approved .stat-number { color: #38a169; }
        .stat-rejected .stat-number { color: #e53e3e; }
        .stat-total .stat-number { color: #667eea; }

        .btn-dashboard {
            background: #f7fafc;
            border: 1px solid #e2e8f0;
            color: #4a5568;
            padding: 10px 16px;
            border-radius: 10px;
            text-decoration: none;
            font-weight: 500;
            display: inline-flex;
            align-items: center;
            gap: 8px;
            transition: all 0.2s ease;
            font-size: 14px;
        }

        .btn-dashboard:hover {
            background: #edf2f7;
            border-color: #cbd5e0;
            color: #2d3748;
            text-decoration: none;
            transform: translateY(-1px);
        }

        @@media (max-width: 768px) {
            .leaves-grid {
                grid-template-columns: 1fr;
            }
            
            .page-header {
                flex-direction: column;
                align-items: flex-start;
                gap: 16px;
            }

            .page-title-section {
                flex-direction: column;
                align-items: flex-start;
                gap: 12px;
            }

            .header-actions {
                width: 100%;
                justify-content: flex-start;
            }
        }
    </style>
}

<div class="leaves-container">
    <!-- Breadcrumb Navigation -->
    <nav class="breadcrumb-nav">
        <a href="@Url.Action("Dashboard", "Employee")" class="breadcrumb-link">
            <i class="fas fa-home"></i> Dashboard
        </a>
        <span class="breadcrumb-separator">
            <i class="fas fa-chevron-right"></i>
        </span>
        <span class="breadcrumb-current">My Leaves</span>
    </nav>

    <!-- Page Header with Back Button -->
    <div class="page-header">
        <h1 class="page-title">
            <i class="fas fa-history"></i>
            My Leave History
        </h1>
        <a href="@Url.Action("Dashboard", "Employee")" class="btn-dashboard">
            <i class="fas fa-arrow-left"></i>
            Back to Dashboard
        </a>
    </div>

    @if (Model.AllLeaves != null && Model.AllLeaves.Any())
    {
        
            var pendingCount = Model.AllLeaves.Count(l => l.Status == LeaveStatus.Pending);
            var approvedCount = Model.AllLeaves.Count(l => l.Status == LeaveStatus.Approved);
            var rejectedCount = Model.AllLeaves.Count(l => l.Status == LeaveStatus.Rejected);
            var totalCount = Model.AllLeaves.Count;
        

        <div class="stats-bar">
            <div class="stat-item stat-total">
                <div class="stat-number">@totalCount</div>
                <div class="stat-label">Total Requests</div>
            </div>
            <div class="stat-item stat-pending">
                <div class="stat-number">@pendingCount</div>
                <div class="stat-label">Pending</div>
            </div>
            <div class="stat-item stat-approved">
                <div class="stat-number">@approvedCount</div>
                <div class="stat-label">Approved</div>
            </div>
            <div class="stat-item stat-rejected">
                <div class="stat-number">@rejectedCount</div>
                <div class="stat-label">Rejected</div>
            </div>
        </div>

        <div class="leaves-grid">
            @foreach (var leave in Model.AllLeaves.OrderByDescending(l => l.StartDate))
            {
                <div class="leave-card">
                    <div class="card-header">
                        <div class="status-badge status-@leave.Status.ToString().ToLower()">
                            @leave.Status
                        </div>

                        <div class="leave-type-section">
                            @{
                                string iconClass = "vacation-icon";
                                string iconName = "fa-calendar";
                                
                                switch (leave.LeaveType?.ToLower())
                                {
                                    case "vacation":
                                    case "annual":
                                        iconClass = "vacation-icon";
                                        iconName = "fa-umbrella-beach";
                                        break;
                                    case "sick":
                                    case "medical":
                                        iconClass = "sick-icon";
                                        iconName = "fa-user-md";
                                        break;
                                    case "personal":
                                        iconClass = "personal-icon";
                                        iconName = "fa-user";
                                        break;
                                    case "emergency":
                                        iconClass = "emergency-icon";
                                        iconName = "fa-exclamation-triangle";
                                        break;
                                }
                            }
                            
                            <div class="leave-type-icon @iconClass">
                                <i class="fas @iconName"></i>
                            </div>

                        </div>
                    </div>

                    <div class="card-body">
                        <div class="date-section">
                            <div class="date-info">
                                <div class="date-range">
                                    <i class="fas fa-calendar-alt"></i>
                                    @leave.StartDate.ToString("MMM dd") - @leave.EndDate.ToString("MMM dd, yyyy")
                                </div>
                                <div class="duration-badge">
                                    @leave.TotalDays day@(leave.TotalDays != 1 ? "s" : "")
                                </div>
                            </div>
                        </div>

                        @if (!string.IsNullOrEmpty(leave.Comment))
                        {
                            <div class="comment-section">
                                <div style="display: flex; align-items: flex-start; gap: 8px;">
                                    <i class="fas fa-quote-left" style="color: #667eea; margin-top: 2px;"></i>
                                    <p class="comment-text">@leave.Comment</p>
                                </div>
                            </div>
                        }

                        @if (leave.Status == LeaveStatus.Pending)
                        {
                            <div class="status-info pending">
                                <i class="fas fa-clock"></i>
                                <span>Pending approval@(!string.IsNullOrEmpty(leave.ManagerName) ? $" from {leave.ManagerName}" : "")</span>
                            </div>
                        }
                        else if (leave.Status == LeaveStatus.Approved)
                        {
                            <div class="status-info approved">
                                <i class="fas fa-check-circle"></i>
                                <span>Approved@(!string.IsNullOrEmpty(leave.ManagerName) ? $" by {leave.ManagerName}" : "")</span>
                            </div>
                        }
                        else if (leave.Status == LeaveStatus.Rejected)
                        {
                            <div class="status-info rejected">
                                <i class="fas fa-times-circle"></i>
                                <span>Rejected@(!string.IsNullOrEmpty(leave.ManagerName) ? $" by {leave.ManagerName}" : "")</span>
                            </div>
                        }
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="empty-state">
            <div class="empty-icon">
                <i class="fas fa-clipboard-list"></i>
            </div>
            <h2 class="empty-title">No Leave Requests Yet</h2>
            <p class="empty-description">You haven't submitted any leave requests. Start by booking your first time off!</p>
            <a href="@Url.Action("Dashboard", "Employee")" class="btn-primary">
                <i class="fas fa-plus"></i>
                Book Time Off
            </a>
        </div>
    }
</div>
